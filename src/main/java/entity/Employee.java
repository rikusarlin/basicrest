package entity;

import java.util.List;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import util.EmployeeIdSerializer;
import util.EmployeeListSerializer;
import util.OfficeCodeSerializer;

/**
 * Generated by sarlirik on 23/09/17.
 */
@Entity
@Table(name = "employees", catalog = "")
public class Employee {
    private Integer employeeNumber;
    private String lastName;
    private String firstName;
    private String extension;
    private String email;
    private String jobTitle;
    private Office office;
	private Employee reportsToEmployee;
	private List<Employee> reportees;

    @Id
    @Column(name = "employeeNumber", nullable = false)
    public Integer getEmployeeNumber() {
        return employeeNumber;
    }

    public void setEmployeeNumber(Integer employeeNumber) {
        this.employeeNumber = employeeNumber;
    }

    @Basic
    @Column(name = "lastName", nullable = false, length = 50)
    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Basic
    @Column(name = "firstName", nullable = false, length = 50)
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Basic
    @Column(name = "extension", nullable = false, length = 10)
    public String getExtension() {
        return extension;
    }

    public void setExtension(String extension) {
        this.extension = extension;
    }

    @Basic
    @Column(name = "email", nullable = false, length = 100)
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Basic
    @Column(name = "jobTitle", nullable = false, length = 50)
    public String getJobTitle() {
        return jobTitle;
    }

    public void setJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "officeCode")
    public Office getOffice() {
        return office;
    }

    @JsonSerialize(using=OfficeCodeSerializer.class)
    public void setOffice(Office office) {
        this.office = office;
    }

	@JsonSerialize(using=EmployeeListSerializer.class)
	@OneToMany(mappedBy = "reportsToEmployee", cascade=CascadeType.ALL, fetch=FetchType.LAZY)
	public List<Employee> getReportees() {
		return reportees;
	}

	public void setReportees(List<Employee> reportees) {
		this.reportees = reportees;
	}
	
	public void addReportee(Employee emp) {
		reportees.add(emp);
		emp.setReportsToEmployee(this);
	}

	public void removeReportee(Employee emp) {
		reportees.remove(emp);
		emp.setReportsToEmployee(null);
	}

	
	@JsonSerialize(using=EmployeeIdSerializer.class)
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="reportsTo")
	public Employee getReportsToEmployee() {
		return reportsToEmployee;
	}

	public void setReportsToEmployee(Employee reportsTo) {
		this.reportsToEmployee = reportsTo;
	}


	@Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Employee that = (Employee) o;

        if (employeeNumber != that.employeeNumber) return false;
        if (lastName != null ? !lastName.equals(that.lastName) : that.lastName != null) return false;
        if (firstName != null ? !firstName.equals(that.firstName) : that.firstName != null) return false;
        if (extension != null ? !extension.equals(that.extension) : that.extension != null) return false;
        if (email != null ? !email.equals(that.email) : that.email != null) return false;
        if (jobTitle != null ? !jobTitle.equals(that.jobTitle) : that.jobTitle != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = employeeNumber;
        result = 31 * result + (lastName != null ? lastName.hashCode() : 0);
        result = 31 * result + (firstName != null ? firstName.hashCode() : 0);
        result = 31 * result + (extension != null ? extension.hashCode() : 0);
        result = 31 * result + (email != null ? email.hashCode() : 0);
        result = 31 * result + (jobTitle != null ? jobTitle.hashCode() : 0);
        return result;
    }

}
